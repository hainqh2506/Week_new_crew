# Import c√°c th∆∞ vi·ªán c·∫ßn thi·∫øt
import os
from dotenv import load_dotenv  # Th∆∞ vi·ªán ƒë·ªÉ load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
import streamlit as st  # Th∆∞ vi·ªán ƒë·ªÉ t·∫°o giao di·ªán web
from crew.crew import WeeklyNewsUpdateCrew
# Load c√°c bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
load_dotenv()


class NewsletterGenUI:
    """
    Class ch√≠nh ƒë·ªÉ x·ª≠ l√Ω giao di·ªán ng∆∞·ªùi d√πng c·ªßa ·ª©ng d·ª•ng t·∫°o newsletter
    """

    def load_html_template(self):
        with open("src/newsletter_gen/config/newsletter_template.html", "r") as file:
            html_template = file.read()

        return html_template

    def generate_newsletter(self, topic, personal_message):
        inputs = {
            "topic": topic,
            "personal_message": personal_message,
            "html_template": self.load_html_template(),
        }
        return WeeklyNewsUpdateCrew().crew().kickoff(inputs=inputs)

    def newsletter_generation(self):

        if st.session_state.generating:
            st.session_state.newsletter = self.generate_newsletter(
                st.session_state.topic, st.session_state.personal_message
            )

        if st.session_state.newsletter and st.session_state.newsletter != "":
            with st.container():
                st.write("Newsletter generated successfully!")
                st.download_button(
                    label="Download HTML file",
                    data=st.session_state.newsletter,
                    file_name="newsletter.html",
                    mime="text/html",
                )
            st.session_state.generating = False

    def sidebar(self):
        """
        T·∫°o v√† qu·∫£n l√Ω thanh sidebar c·ªßa ·ª©ng d·ª•ng
        Ch·ª©a c√°c input v√† n√∫t ƒëi·ªÅu khi·ªÉn ch√≠nh
        """
        with st.sidebar:
            # Ti√™u ƒë·ªÅ c·ªßa sidebar
            st.title("Newsletter Generator")

            # M√¥ t·∫£ ng·∫Øn v·ªÅ c√°ch s·ª≠ d·ª•ng
            st.write(
                """
                To generate a newsletter, enter a topic and a personal message. \n
                Your team of AI agents will generate a newsletter for you!
                """
            )

            # Input field cho ch·ªß ƒë·ªÅ newsletter
            st.text_input("Topic", key="topic", placeholder="USA Stock Market")

            # Input field cho l·ªùi nh·∫Øn c√° nh√¢n
            st.text_area(
                "Your personal message (to include at the top of the newsletter)",
                key="personal_message",
                placeholder="Dear readers, welcome to the newsletter!",
            )

            # N√∫t ƒë·ªÉ b·∫Øt ƒë·∫ßu t·∫°o newsletter
            if st.button("Generate Newsletter"):
                st.session_state.generating = True

    def render(self):
        """
        H√†m ch√≠nh ƒë·ªÉ render to√†n b·ªô giao di·ªán ·ª©ng d·ª•ng
        Kh·ªüi t·∫°o c√°c bi·∫øn session state v√† hi·ªÉn th·ªã c√°c th√†nh ph·∫ßn UI
        """
        # C·∫•u h√¨nh trang Streamlit
        st.set_page_config(page_title="Newsletter Generation", page_icon="üìß")

        # Kh·ªüi t·∫°o c√°c bi·∫øn trong session_state n·∫øu ch∆∞a t·ªìn t·∫°i
        if "topic" not in st.session_state:
            st.session_state.topic = ""

        if "personal_message" not in st.session_state:
            st.session_state.personal_message = ""

        if "newsletter" not in st.session_state:
            st.session_state.newsletter = ""

        if "generating" not in st.session_state:
            st.session_state.generating = False

        # Hi·ªÉn th·ªã sidebar
        self.sidebar()

        # T·∫°m th·ªùi comment out ph·∫ßn t·∫°o newsletter
        #self.newsletter_generation()


# Entry point c·ªßa ·ª©ng d·ª•ng
if __name__ == "__main__":
    NewsletterGenUI().render()  # Kh·ªüi t·∫°o v√† hi·ªÉn th·ªã giao di·ªán